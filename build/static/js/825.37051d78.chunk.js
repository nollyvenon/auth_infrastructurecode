"use strict";(self.webpackChunkavas_auth=self.webpackChunkavas_auth||[]).push([[825],{1314:function(e,n,r){r.d(n,{Z:function(){return d}});var s=r(7313),a=r(5968),t=r(3451),o=r(2704),i=r.n(o),l=r(6417),d=function(e){var n=e.code;return(0,s.useEffect)((function(){new(i())(".copy-button").on("success",(function(e){e.clearSelection(),alert("Code copied to clipboard!")}))}),[]),(0,l.jsxs)("div",{className:"chat-bubble",children:[(0,l.jsx)("div",{className:"code-container",children:(0,l.jsx)(a.Z,{language:"javascript",style:t.Z,showLineNumbers:!0,children:n})}),(0,l.jsx)("button",{className:"copy-button","data-clipboard-text":n,children:"Copy Code"})]})}},825:function(e,n,r){r.r(n),r.d(n,{default:function(){return b}});var s=r(7313),a=r(2135),t=r(9860),o=r(9019),i=r(3428),l=r(3405),d=r(9439),c=r(603),u=r(6573),m=r(7829),h=r(4313),p=r(1113),x=r(2294),w=r(9099),f=r(8089),g=r(7410),v=r(6417),y=function(){var e=(0,t.Z)(),n=(0,s.useState)(""),r=(0,d.Z)(n,2),a=r[0],o=r[1],i=(0,s.useContext)(c.$),l=i.setPage,y=i.email;return(0,v.jsxs)(v.Fragment,{children:[(0,v.jsxs)(m.Z,{alignItems:"center",display:"flex",mt:2,children:[(0,v.jsx)(h.Z,{sx:{flexGrow:1},orientation:"horizontal"}),(0,v.jsx)(p.Z,{color:"textSecondary",variant:"h5",sx:{m:e.spacing(2)},children:"OR"}),(0,v.jsx)(h.Z,{sx:{flexGrow:1},orientation:"horizontal"})]}),(0,v.jsx)(g.J9,{initialValues:{email:"",password:"",submit:null},validationSchema:f.Ry().shape({email:f.Z_().email("Must be a valid email").max(255).required("Email is required"),password:f.Z_().max(255).required("Password is required")}),children:function(e){var n=e.errors,r=(e.handleBlur,e.handleChange,e.handleSubmit,e.isSubmitting,e.touched);e.values;return(0,v.jsxs)(v.Fragment,{children:[(0,v.jsx)("h2",{children:" Change Password "}),(0,v.jsxs)("form",{className:"form",children:[(0,v.jsx)("label",{htmlFor:"email",children:" New Password: "}),(0,v.jsx)(x.Z,{error:Boolean(r.password&&n.password),fullWidth:!0,className:"verification-input",helperText:r.password&&n.password,label:"Password",margin:"normal",placeholder:"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022",name:"password",onBlur:function(e){o(e.target.value)},onChange:function(e){o(e.target.value)},type:"password",value:a,required:"",variant:"outlined"}),(0,v.jsx)(m.Z,{mt:2,children:(0,v.jsx)(w.Z,{color:"primary",onClick:function(){return function(){if(a)try{return u.Z.put("".concat("http://localhost:3001","/api/update-password"),{email:y,newPassword:a}).then((function(){return l("login")})),alert("Password changed successfully, please login!")}catch(e){console.log(e)}return alert("Please enter your new Password")}()},fullWidth:!0,size:"large",type:"submit",variant:"contained",children:"Reset Password"})})]})]})}})]})},P=r(4427),j=r(1314),b=function(){var e=(0,t.Z)();return(0,v.jsxs)(o.ZP,{container:!0,justifyContent:"space-evenly",alignItems:"center",sx:{backgroundColor:e.palette.common.black,height:"100%",minHeight:"100vh"},children:[(0,v.jsx)(o.ZP,{item:!0,xs:11,sm:7,md:6,lg:5,children:(0,v.jsx)(i.Z,{sx:{overflow:"visible",display:"flex",position:"relative","& .MuiCardContent-root":{flexGrow:1,flexBasis:"50%",width:"50%"},maxWidth:"475px",margin:"24px auto"},children:(0,v.jsx)(l.Z,{sx:{p:e.spacing(5,4,3,4)},children:(0,v.jsxs)(o.ZP,{container:!0,direction:"column",spacing:4,justifyContent:"center",children:[(0,v.jsx)(o.ZP,{item:!0,xs:12,children:(0,v.jsx)(o.ZP,{container:!0,justifyContent:"space-between",children:(0,v.jsx)(o.ZP,{item:!0,children:(0,v.jsx)(a.rU,{to:"/",children:(0,v.jsx)("img",{alt:"Auth method",src:P})})})})}),(0,v.jsx)(o.ZP,{item:!0,xs:12,children:(0,v.jsx)(y,{})})]})})})}),(0,v.jsx)(o.ZP,{item:!0,xs:11,sm:7,md:6,lg:5,children:(0,v.jsx)(j.Z,{code:'import React, { useState, useContext } from \'react\';\nimport { RecoveryContext } from \'../../layout/App\';\nimport axios from \'axios\';\n// material-ui\nimport { useTheme } from \'@mui/material/styles\';\nimport { Box, Button, Divider, TextField, Typography } from \'@mui/material\';\n\n//  third party\nimport * as Yup from \'yup\';\nimport { Formik } from \'formik\';\n\n// ==============================|| FIREBASE LOGIN ||============================== //\n\nconst FirePasswordReset = ({}) => {\n  const theme = useTheme();\n  const [password, setPassword] = useState(\'\');\n  const { setPage, email } = useContext(RecoveryContext);\n  function changePassword() {\n    if (password) {\n      try {\n        axios\n          .put("{process.env.PUBLIC_URL}/api/update-password", {\n            email: email,\n            newPassword: password\n          })\n          .then(() => setPage(\'login\'));\n        return alert(\'Password changed successfully, please login!\');\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    return alert(\'Please enter your new Password\');\n  }\n\n  //const { errors } = this.state;\n\n  return (\n    <>\n      <Box alignItems="center" display="flex" mt={2}>\n        <Divider sx={{ flexGrow: 1 }} orientation="horizontal" />\n        <Typography color="textSecondary" variant="h5" sx={{ m: theme.spacing(2) }}>\n          OR\n        </Typography>\n        <Divider sx={{ flexGrow: 1 }} orientation="horizontal" />\n      </Box>\n\n      <Formik\n        initialValues={{\n          email: \'\',\n          password: \'\',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email(\'Must be a valid email\').max(255).required(\'Email is required\'),\n          password: Yup.string().max(255).required(\'Password is required\')\n        })}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <>\n            <h2> Change Password </h2>\n            <form className="form">\n              <label htmlFor="email"> New Password: </label>\n              <TextField\n                error={Boolean(touched.password && errors.password)}\n                fullWidth\n                className="verification-input"\n                helperText={touched.password && errors.password}\n                label="Password"\n                margin="normal"\n                placeholder="\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022"\n                name="password"\n                onBlur={(e) => {\n                  setPassword(e.target.value);\n                }}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                type="password"\n                value={password}\n                required=""\n                variant="outlined"\n              />\n              <Box mt={2}>\n                <Button color="primary" onClick={() => changePassword()} fullWidth size="large" type="submit" variant="contained">\n                  Reset Password\n                </Button>\n              </Box>\n            </form>\n          </>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default FirePasswordReset;\n'})})]})}}}]);